- if @first_visit
  .new-visitor-show
    .new-visitor-show-text-container.col-md-6
      %h1.new-visitor-show-title
        The ₭udo Jar
      .new-visitor-show-text
        %p
          What's new?
        %span
          The ₭udo-o-Matic has been changed into The ₭udo Jar
        %p
          How does it work?
        %span
          %p
            To give ₭udos all you have to do is fill in to who you want to give ₭udos to, the amount and for what kind of activity you are giving ₭udos for. The last step is to immortalise the transaction by clicking on 'Give ₭udos'
          %p
            Check out the newsfeed for your story! And those of your collegues
          %p
            Need help with deciding how many ₭udos you want to give someone? Read the guidelines!
      %a.close-new-visitor-show{:href => "#"} Close
git s
%header
  = image_tag 'kabisa_white.svg'
  %strong
    ₭udos
    %span> -
    Jar
  %span#link_to_git
    Please report bugs or issues
    %a{:href  => "https://github.com/kabisa/kudo-o-matic/issues", target: '_blank' } here!
.topouterwrapper
  .topinnerwrapper
    .flex_dummy_div
    .jarwrapper
      .loader{data: {balance_percentage: @balance.percentage, balance_coins: @balance.amount }}
        #lid
          = link_to new_transaction_path do
            %p
              OPEN TO ADD ₭UDOS
        #toppart
        #glass{:valuemax => "#{@next.amount}", :valuemin => "#{@previous.amount}", :valuenow => "#{@balance.amount}"}
          .title
            = @next.name
          .next-goal
            .balance.small-title
              = @next.kudos
              \-
          #textonjar
          #cubes
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
            %div
          #drink
          %span#counter
        #coaster
    .container.center
      .col-md-5.new_transaction_container
        %h1
          = t('dashboard.title')

        = simple_form_for @transaction do |f|
          .span
            = f.text_field :receiver_name, data: { autocomplete_source: users_autocomplete_path}, field_id: false,  placeholder: 'To (max. 35 characters)',required: true , :autofocus => true, maxlength: '35'
          .span
            = f.input_field :amount, input_html:{ min: '0', max: '999', step: 'any'} , placeholder: 'Amount',required: true
          .span
            = f.input_field :activity_name, data: { autocomplete_source: activities_autocomplete_path}, field_id: false,  placeholder: 'For (min. 4, max. 60 characters',required: true, maxlength: '60'

          = f.submit t('dashboard.submit_kudos')
          %span#errors
            = flash[:error]
      .col-md-7
        %span.guidelines_dynamic
          These are the
          = link_to t('dashboard.guidelines'), :guidelines_transactions, class: 'reference', target: "_blank"
          that are around
          %span#amount_of_kudo_clone
          ₭udos
        .guidelines_container
          %ul
      %span.guidelines_static
        Check out the
        = link_to t('dashboard.guidelines'), :guidelines_transactions, class: 'reference', target: "_blank"
    .flex_dummy_div
    %span.glyphicon-down
      .glyphicon.glyphicon-chevron-down{"aria-hidden" => "true"}

.bottomouterwrapper
  .bottominnerwrapper
    .flex_dummy_div
    .small-title
    .last-transactions
      - @transactions.each do |transaction|
        .post-container
          .avatar
            = image_tag User.find(transaction.sender_id).picture_url
            = image_tag transaction.receiver_image
          .s_and_r_container
            .amountofkudos
            = transaction.amount
            %span
              ₭
            .sendername
              = transaction.sender.name
            %span
              %span.glyphicon.glyphicon-menu-right{"aria-hidden" => "true"}
            .receivername
              = transaction.receiver_name_feed
            %span.post-time-stamp
              = distance_of_time_in_words(DateTime.now, transaction.created_at)
              ago
            .activityname
              %span
                = transaction.activity_name_feed.capitalize

          -#.like-btn
            = link_to like_path(transaction), class: "like", method: :post do
              %button.btn.btn-info{"aria-label" => "Left Align", :type => "button"}
                %span.glyphicon.glyphicon-thumbs-up.glyphicon-aligncenter{"aria-hidden" => "true"}
                %span.badge{"aria-hidden" => "true"}= transaction.get_upvotes.size
      = paginate @transactions
    .flex_dummy_div
-#orientation_message_overlay
  %p
    This app works optimal in Portrait mode, please use Portrait mode :)
    (Nobody uses landscape anymore anyway)