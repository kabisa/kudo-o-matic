// ----- Variables -----

// Colours
$progress-color-dark:       #1976D2 !default;
$progress-color:            #2196F3 !default;
$progress-color-light:      #56ADF5 !default;
$progress-color-grey-light: #b6b6b6 !default;
$progress-color-grey:       #868686 !default;
$progress-color-grey-dark:  #333333 !default;

// Sizing
$progress-tracker-padding:  5px !default;

$marker-size:               28px !default;
$marker-size-half:          ($marker-size / 2);
$marker-size-third:         ($marker-size / 3);
$marker-size-quarter:       ($marker-size / 4);
$marker-spacing:            10px !default;

$path-height:               4px !default;
$path-position:             $marker-size-half - ($path-height / 2);

$text-padding:              $marker-size-half !default;
$text-padding-X:            $marker-size-third !default;
$text-padding-Y:            $marker-size-half !default;
$text-padding--vertical:    $marker-size + $marker-size-half !default;

// Only needed for short text version, the word size should be the width of the widest word without padding.
$word-size:                     54px !default;
$progress-tracker-word-padding: ($word-size + $text-padding-X + $marker-size-half) / 2;

// Animations/Transitions
$animation-duration:        0.3s !default;
$ripple-color:              rgba(0, 0, 0, 0.3) !default;

// ----- Progress Tracker -----


// ----- Elements -----

// Container element

.goal-container {
  text-align: center;
  font-weight: 400;
  margin-bottom: 2rem;
}

.progress-tracker {
  display: flex;
  margin: 0 auto;
  padding: $padding 0;
  list-style: none;
}

// Step container that creates lines between steps
.progress-step {
  display: block;
  position: relative;
  flex: 1 1 0%;
  margin: 0;
  padding: 0;
  min-width: $marker-size; // For a flexbox bug in firefox that wont allow the text overflow on the text

  // Stops the last step growing
  &:last-child {
    flex-grow: 0;
  }

  // Path between markers, this is not created for the last step
  .progress-bar-inner {
    position: absolute;
    bottom: 0;
    right: 0;
    left: 0;
    //z-index: 100000;
    background: $light-blue-color;
    border-top: 1px solid $white-color;
  }

  // Path between markers, this is not created for the last step
  .progress-bar {
    position: absolute;
    z-index: 2;
    top: $path-position;
    bottom: $path-position;
    right: - $marker-size-half;
    width: 100%;
    height: $path-height;
    background: $medium-grey-color;
  }

  &:last-child .progress-bar {
    display: none;
  }

  .progress-bar-complete {
    position: absolute;
    //z-index: -10;
    top: $path-position;
    bottom: $path-position;
    right: - $marker-size-half;
    width: 100%;
    height: $path-height;
    background: $light-blue-color;
  }

  &:last-child .progress-bar-complete {
    display: none;
  }

  // Active state
  &.is-active {
    .progress-title {
      font-weight: 400;
    }
  }

  > a {
    display: block;
  }

}

// Progress marker
.progress-marker {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  z-index: 1;
  width: $marker-size;
  height: $marker-size;
  padding-bottom: 2px; // To align text within the marker
  color: #fff;
  font-weight: 400;
  border: 2px solid transparent;
  border-radius: $border-radius;
  transition: background-color, border-color;
  transition-duration: $animation-duration;

  .percentage {
    font-size: 85%;
  }
}


// Progress text
.progress-text {
  display: block;
  padding: 0 $text-padding-X;
  //padding-bottom: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  font-size: 115%;
}
.progress-title {
  margin-top: 0;
}


// Step state mixin - The first arugment is required and the rest are optional, if you pass in null the value will not be changed.
@mixin progress-state($marker-color-bg, $marker-color-border: null, $marker-color-text: null, $path-color: null, $text-color: null) {
  .progress-marker {
    color: $marker-color-text;
    background-color: $marker-color-bg;
    border-color: $marker-color-border;
  }

  &::after {
    background-color: $path-color;
  }

  .progress-text,
  .progress-step > a .progress-text {
    color: $white-color;
  }
}


// States
.progress-step {

  // Inactive - Default state
  @include progress-state($medium-grey-color, null, #fff, $medium-grey-color, $progress-color-grey-dark);

  // Active state
  &.is-active {
    @include progress-state($medium-grey-color, $path-color: $light-blue-color);

  }

  // Complete state
  &.is-complete {
    @include progress-state($light-blue-color, $path-color: $light-blue-color);
  }
}



// ----- Modifiers -----

// Center align markers and text
.progress-tracker--center {

  .progress-step {
    text-align: center;

    &:last-child {
      flex-grow: 1;
    }

    &::after {
      right: -50%;
    }
  }

  .progress-marker {
    margin-left: auto;
    margin-right: auto;
  }
}


// Right align markers and text
.progress-tracker--right {

  .progress-step {
    text-align: right;

    &:last-child {
      flex-grow: 1;
    }

    &::after {
      right: calc(-100% + #{$marker-size-half});
    }
  }

  .progress-marker {
    margin-left: auto;
  }
}


// Border around steps (Only for use without text)
.progress-tracker--border {
  padding: $progress-tracker-padding;
  border: 2px solid $progress-color-grey;
  border-radius: $marker-size + ($progress-tracker-padding * 2);
}


// Spaces between markers
.progress-tracker--spaced {

  .progress-step {

    &::after {
      width: calc(100% - #{$marker-size + ($marker-spacing * 2)});
      margin-right: ($marker-size-half + $marker-spacing);
    }
  }

}


// Word below markers
.progress-tracker--word {
  padding-right: $progress-tracker-word-padding;
  overflow: hidden;

  .progress-text {
    display: inline-block;
    white-space: nowrap;
  }

  .progress-title {
    margin: 0;
  }

}


.progress-tracker--word-center {
  padding-right: $progress-tracker-word-padding;
  padding-left: $progress-tracker-word-padding;

  .progress-text {
    padding-right: 0;
    padding-left: 0;
    transform: translateX(calc(-50% + #{$marker-size-half}));
  }

}


.progress-tracker--word-right {
  padding-right: 0;
  padding-left: $progress-tracker-word-padding;

  .progress-text {
    padding-left: 0;
    transform: translateX(calc(-100% + #{$marker-size}));
  }

}


// Text below markers
.progress-tracker--text {

  .progress-step {

    &:last-child {
      flex-grow: 1;
    }
  }

}


// Text above markers
.progress-tracker--text-top {

  .progress-step::after {
    top: auto;
  }

  .progress-text {
    height: 100%;
  }

  .progress-marker {
    bottom: $marker-size;
  }

}


// Text inline with markers
.progress-tracker--text-inline {

  .progress-step {
    display: flex;
  }

  .progress-text {
    position: relative;
    z-index: 30;
    max-width: 70%;
    white-space: nowrap;
    padding-top: 0;
    padding-bottom: 0;
    background-color: #fff;
  }

  .progress-title {
    margin: 0;
  }

}


// Square markers
.progress-tracker--square {

  .progress-step {
    padding-top: 0;
  }

  .progress-marker {
    transform: scaleX(0.33) translateY(- $path-position);
    border-radius: 0;
  }

}


// Overflow on small screens
@media (max-width: 399px) {
  .progress-tracker-mobile {
    overflow-x: auto;

    .progress-tracker {
      min-width: 200%;
    }
  }
}


// Vertical layout
.progress-tracker--vertical {
  flex-direction: column;

  .progress-step {
    //flex: 1 1 auto;

    .progress-bar {
      right: auto;
      top: 28px;
      left: 0.5rem;
      width: $path-height * 3;
      height: 74%;
    }

    .progress-bar-complete {
      right: auto;
      top: 28px;
      left: 0.5rem;
      width: $path-height * 3;
      height: 74%;
    }
  }

  .progress-marker {
    position: absolute;
    left: 0;
  }

  .progress-text {
    //padding-top: $marker-size-quarter;
    padding-left: $text-padding--vertical;
    margin-left: 0;
  }

  .left-text {
    font-size: $font-size-small;
  }

  .progress-step:not(:last-child) .progress-text {
    padding-bottom: $text-padding--vertical;
  }
}

@media screen and (min-width: 1200px) {
  .goal-container {
    display: block !important;
  }
}

@media screen and (max-width: 1200px) {
  .goal-container {
    display: none;
  }
}