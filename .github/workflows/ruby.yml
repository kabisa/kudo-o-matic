name: Rails test and deploy

on:
  push:
    branches:
      - '*'
      - '*/*'
      - '!master'
  pull_request:
    branches:
      - '*'
      - '*/*'
      - '!master'

jobs:
  test:
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      RAILS_ENV: test

    runs-on: ubuntu-latest
    
    services:
      db:
        image: postgres:10.2
        ports:
          - 5432:5432        
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3.5.2
    - uses: ruby/setup-ruby@1.145.0
      with:
        ruby-version: 3.1.4
    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Bundle install
      run: |
        sudo apt-get -yqq install libpq-dev
        gem install bundler -v 2.3.26
        bundle config path vendor/bundle
        bundle install --jobs=3 --retry=3 --without production
    - name: Setup environment and database
      run: |
        cp env.example .env
        cp config/database.yml.ci config/database.yml
        bundle exec rails db:create
        bundle exec rails db:migrate
    - name: Run tests
      run: |
        bundle exec rspec


  deploy-staging:
    if: ${{ github.ref == 'refs/heads/develop' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.2
      - uses: akhileshns/heroku-deploy@v3.12.13
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "kudo-o-matic-staging"
          heroku_email: "ods@kabisa.nl"